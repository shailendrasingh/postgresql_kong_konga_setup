version: '3.4'

networks: 
  kong-net:
    external: true

volumes:
  kong-datastore:

services:
  kong-db:
    image: postgres:9.6
    container_name: kong_db
    restart: always
    volumes:
      - kong-datastore:/var/lib/postgresql/data
    networks:
      - kong-net
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB:       api-gw
      POSTGRES_USER:     kong
      POSTGRES_PASSWORD: kong123

  kong-migrations:
    image: kong:latest
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-db
      KONG_PG_PASSWORD: kong123
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
    command: kong migrations bootstrap
    restart: on-failure
    networks:
      - kong-net
    depends_on:
      - kong-db

  kong:
    image: kong:latest
    container_name: kong
    restart: always
    depends_on:
      - kong-db
    networks:
      - kong-net
    ports:
      - "8000:8000" # Listener
      - "8001:8001" # Admin API
      - "8443:8443" # Listener  (SSL)
      - "8444:8444" # Admin API (SSL)
    environment:
      KONG_DATABASE:         postgres
      KONG_PG_HOST:          kong-db
      KONG_PG_PORT:          5432
      KONG_PG_USER:          kong
      KONG_PG_PASSWORD:      kong123
      KONG_PG_DATABASE:      api-gw
      KONG_CASSANDRA_CONTACT_POINTS: kong-db
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG:  /dev/stderr
      KONG_ADMIN_ERROR_LOG:  /dev/stderr
      KONG_PROXY_LISTEN:     0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN:     0.0.0.0:8001, 0.0.0.0:8444 ssl
  
  
  konga:
    image: pantsel/konga
    ports:
      - 1337:1337
    links:
      - kong
    depends_on:
      - kong-db
      - kong
    networks:
      - kong-net
    container_name: konga
    restart: always
    environment:
      - NODE_ENV=production